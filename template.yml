AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Globals:
  Api:
    OpenApiVersion: 3.0.1
  
  Function:
    Runtime: nodejs12.x
    Timeout: 15

Resources:
  CoursesTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: courses
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  AuthorsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: authors
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  GetAllAuthorsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-all-authors
      CodeUri: lambda
      Handler: get-all-authors.handler
      Environment:
        Variables:
          AUTHORS_TABLE: !Ref AuthorsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthorsTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /authors
            Method: get
      
  SaveOneCourseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: save-one-course
      CodeUri: lambda
      Handler: save-one-course.handler
      Environment:
        Variables:
          COURSES_TABLE: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses
            Method: post
            RequestModel:
              Model: Course
              Required: true
      
  UpdateOneCourseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-one-course
      CodeUri: lambda
      Handler: update-one-course.handler
      Environment:
        Variables:
          COURSES_TABLE: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses/{id}
            Method: put
            RequestModel:
              Model: Course
              Required: true

  GetAllCoursesFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-all-courses
      CodeUri: lambda
      Handler: get-all-courses.handler
      Environment:
        Variables:
          COURSES_TABLE: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses
            Method: get

  GetOneCourseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: get-one-course
      CodeUri: lambda
      Handler: get-one-course.handler
      Environment:
        Variables:
          COURSES_TABLE: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses/{id}
            Method: get

  DeleteOneCourseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: delete-one-course
      CodeUri: lambda
      Handler: delete-one-course.handler
      Environment:
        Variables:
          COURSES_TABLE: !Ref CoursesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref CoursesTable
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /courses/{id}
            Method: delete

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      Cors: "'*'"
      Models:
        Course:
          $schema: http://json-schema.org/schema#
          title: CourseInputModel
          type: object
          properties:
            title:
              type: string
            authorId:
              type: integer
            length:
              type: string
            category:
              type: string
          required:
            - title
            - authorId
            - length
            - category

Outputs:
  GetAllAuthorsInvokeUrl:
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/v1/authors

  GetAllCoursesInvokeUrl:
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/v1/courses